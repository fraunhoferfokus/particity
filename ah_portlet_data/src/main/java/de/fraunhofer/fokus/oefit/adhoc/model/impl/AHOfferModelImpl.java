/*
 * Copyright (c) 2015, Fraunhofer FOKUS
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 * 
 * * Neither the name of particity nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * 
 * 
 * @author sma
 */
package de.fraunhofer.fokus.oefit.adhoc.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.fraunhofer.fokus.oefit.adhoc.model.AHOffer;
import de.fraunhofer.fokus.oefit.adhoc.model.AHOfferModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AHOffer service. Represents a row in the &quot;AHOFFER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.fraunhofer.fokus.oefit.adhoc.model.AHOfferModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AHOfferImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AHOfferImpl
 * @see de.fraunhofer.fokus.oefit.adhoc.model.AHOffer
 * @see de.fraunhofer.fokus.oefit.adhoc.model.AHOfferModel
 * @generated
 */
public class AHOfferModelImpl extends BaseModelImpl<AHOffer>
    implements AHOfferModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a a h offer model instance should use the {@link de.fraunhofer.fokus.oefit.adhoc.model.AHOffer} interface instead.
     */
    public static final String TABLE_NAME = "AHOFFER";
    public static final Object[][] TABLE_COLUMNS = {
            { "offerId", Types.BIGINT },
            { "title", Types.VARCHAR },
            { "description", Types.VARCHAR },
            { "workTime", Types.VARCHAR },
            { "workType", Types.INTEGER },
            { "type_", Types.INTEGER },
            { "status", Types.INTEGER },
            { "socialStatus", Types.INTEGER },
            { "created", Types.BIGINT },
            { "updated", Types.BIGINT },
            { "expires", Types.BIGINT },
            { "publish", Types.BIGINT },
            { "adressId", Types.BIGINT },
            { "contactId", Types.BIGINT },
            { "sndContactId", Types.BIGINT },
            { "contactAgency", Types.BOOLEAN },
            { "orgId", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table AHOFFER (offerId LONG not null primary key,title STRING null,description STRING null,workTime VARCHAR(75) null,workType INTEGER,type_ INTEGER,status INTEGER,socialStatus INTEGER,created LONG,updated LONG,expires LONG,publish LONG,adressId LONG,contactId LONG,sndContactId LONG,contactAgency BOOLEAN,orgId LONG)";
    public static final String TABLE_SQL_DROP = "drop table AHOFFER";
    public static final String ORDER_BY_JPQL = " ORDER BY ahOffer.updated DESC, ahOffer.status DESC";
    public static final String ORDER_BY_SQL = " ORDER BY AHOFFER.updated DESC, AHOFFER.status DESC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.de.fraunhofer.fokus.oefit.adhoc.model.AHOffer"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.de.fraunhofer.fokus.oefit.adhoc.model.AHOffer"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.de.fraunhofer.fokus.oefit.adhoc.model.AHOffer"),
            true);
    public static long ADRESSID_COLUMN_BITMASK = 1L;
    public static long EXPIRES_COLUMN_BITMASK = 2L;
    public static long ORGID_COLUMN_BITMASK = 4L;
    public static long PUBLISH_COLUMN_BITMASK = 8L;
    public static long STATUS_COLUMN_BITMASK = 16L;
    public static long TITLE_COLUMN_BITMASK = 32L;
    public static long UPDATED_COLUMN_BITMASK = 64L;
    public static final String MAPPING_TABLE_ADHOC_OFFER_CITM_NAME = "ADHOC_offer_citm";
    public static final Object[][] MAPPING_TABLE_ADHOC_OFFER_CITM_COLUMNS = {
            { "itemId", Types.BIGINT },
            { "offerId", Types.BIGINT }
        };
    public static final String MAPPING_TABLE_ADHOC_OFFER_CITM_SQL_CREATE = "create table ADHOC_offer_citm (itemId LONG not null,offerId LONG not null,primary key (itemId, offerId))";
    public static final boolean FINDER_CACHE_ENABLED_ADHOC_OFFER_CITM = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.ADHOC_offer_citm"), true);
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.de.fraunhofer.fokus.oefit.adhoc.model.AHOffer"));
    private static ClassLoader _classLoader = AHOffer.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            AHOffer.class
        };
    private long _offerId;
    private String _title;
    private String _originalTitle;
    private String _description;
    private String _workTime;
    private int _workType;
    private int _type;
    private int _status;
    private int _originalStatus;
    private boolean _setOriginalStatus;
    private int _socialStatus;
    private long _created;
    private long _updated;
    private long _expires;
    private long _originalExpires;
    private boolean _setOriginalExpires;
    private long _publish;
    private long _originalPublish;
    private boolean _setOriginalPublish;
    private long _adressId;
    private long _originalAdressId;
    private boolean _setOriginalAdressId;
    private long _contactId;
    private long _sndContactId;
    private boolean _contactAgency;
    private long _orgId;
    private long _originalOrgId;
    private boolean _setOriginalOrgId;
    private long _columnBitmask;
    private AHOffer _escapedModel;

    public AHOfferModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _offerId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setOfferId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _offerId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return AHOffer.class;
    }

    @Override
    public String getModelClassName() {
        return AHOffer.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("offerId", getOfferId());
        attributes.put("title", getTitle());
        attributes.put("description", getDescription());
        attributes.put("workTime", getWorkTime());
        attributes.put("workType", getWorkType());
        attributes.put("type", getType());
        attributes.put("status", getStatus());
        attributes.put("socialStatus", getSocialStatus());
        attributes.put("created", getCreated());
        attributes.put("updated", getUpdated());
        attributes.put("expires", getExpires());
        attributes.put("publish", getPublish());
        attributes.put("adressId", getAdressId());
        attributes.put("contactId", getContactId());
        attributes.put("sndContactId", getSndContactId());
        attributes.put("contactAgency", getContactAgency());
        attributes.put("orgId", getOrgId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long offerId = (Long) attributes.get("offerId");

        if (offerId != null) {
            setOfferId(offerId);
        }

        String title = (String) attributes.get("title");

        if (title != null) {
            setTitle(title);
        }

        String description = (String) attributes.get("description");

        if (description != null) {
            setDescription(description);
        }

        String workTime = (String) attributes.get("workTime");

        if (workTime != null) {
            setWorkTime(workTime);
        }

        Integer workType = (Integer) attributes.get("workType");

        if (workType != null) {
            setWorkType(workType);
        }

        Integer type = (Integer) attributes.get("type");

        if (type != null) {
            setType(type);
        }

        Integer status = (Integer) attributes.get("status");

        if (status != null) {
            setStatus(status);
        }

        Integer socialStatus = (Integer) attributes.get("socialStatus");

        if (socialStatus != null) {
            setSocialStatus(socialStatus);
        }

        Long created = (Long) attributes.get("created");

        if (created != null) {
            setCreated(created);
        }

        Long updated = (Long) attributes.get("updated");

        if (updated != null) {
            setUpdated(updated);
        }

        Long expires = (Long) attributes.get("expires");

        if (expires != null) {
            setExpires(expires);
        }

        Long publish = (Long) attributes.get("publish");

        if (publish != null) {
            setPublish(publish);
        }

        Long adressId = (Long) attributes.get("adressId");

        if (adressId != null) {
            setAdressId(adressId);
        }

        Long contactId = (Long) attributes.get("contactId");

        if (contactId != null) {
            setContactId(contactId);
        }

        Long sndContactId = (Long) attributes.get("sndContactId");

        if (sndContactId != null) {
            setSndContactId(sndContactId);
        }

        Boolean contactAgency = (Boolean) attributes.get("contactAgency");

        if (contactAgency != null) {
            setContactAgency(contactAgency);
        }

        Long orgId = (Long) attributes.get("orgId");

        if (orgId != null) {
            setOrgId(orgId);
        }
    }

    @Override
    public long getOfferId() {
        return _offerId;
    }

    @Override
    public void setOfferId(long offerId) {
        _offerId = offerId;
    }

    @Override
    public String getTitle() {
        if (_title == null) {
            return StringPool.BLANK;
        } else {
            return _title;
        }
    }

    @Override
    public void setTitle(String title) {
        _columnBitmask |= TITLE_COLUMN_BITMASK;

        if (_originalTitle == null) {
            _originalTitle = _title;
        }

        _title = title;
    }

    public String getOriginalTitle() {
        return GetterUtil.getString(_originalTitle);
    }

    @Override
    public String getDescription() {
        if (_description == null) {
            return StringPool.BLANK;
        } else {
            return _description;
        }
    }

    @Override
    public void setDescription(String description) {
        _description = description;
    }

    @Override
    public String getWorkTime() {
        if (_workTime == null) {
            return StringPool.BLANK;
        } else {
            return _workTime;
        }
    }

    @Override
    public void setWorkTime(String workTime) {
        _workTime = workTime;
    }

    @Override
    public int getWorkType() {
        return _workType;
    }

    @Override
    public void setWorkType(int workType) {
        _workType = workType;
    }

    @Override
    public int getType() {
        return _type;
    }

    @Override
    public void setType(int type) {
        _type = type;
    }

    @Override
    public int getStatus() {
        return _status;
    }

    @Override
    public void setStatus(int status) {
        _columnBitmask = -1L;

        if (!_setOriginalStatus) {
            _setOriginalStatus = true;

            _originalStatus = _status;
        }

        _status = status;
    }

    public int getOriginalStatus() {
        return _originalStatus;
    }

    @Override
    public int getSocialStatus() {
        return _socialStatus;
    }

    @Override
    public void setSocialStatus(int socialStatus) {
        _socialStatus = socialStatus;
    }

    @Override
    public long getCreated() {
        return _created;
    }

    @Override
    public void setCreated(long created) {
        _created = created;
    }

    @Override
    public long getUpdated() {
        return _updated;
    }

    @Override
    public void setUpdated(long updated) {
        _columnBitmask = -1L;

        _updated = updated;
    }

    @Override
    public long getExpires() {
        return _expires;
    }

    @Override
    public void setExpires(long expires) {
        _columnBitmask |= EXPIRES_COLUMN_BITMASK;

        if (!_setOriginalExpires) {
            _setOriginalExpires = true;

            _originalExpires = _expires;
        }

        _expires = expires;
    }

    public long getOriginalExpires() {
        return _originalExpires;
    }

    @Override
    public long getPublish() {
        return _publish;
    }

    @Override
    public void setPublish(long publish) {
        _columnBitmask |= PUBLISH_COLUMN_BITMASK;

        if (!_setOriginalPublish) {
            _setOriginalPublish = true;

            _originalPublish = _publish;
        }

        _publish = publish;
    }

    public long getOriginalPublish() {
        return _originalPublish;
    }

    @Override
    public long getAdressId() {
        return _adressId;
    }

    @Override
    public void setAdressId(long adressId) {
        _columnBitmask |= ADRESSID_COLUMN_BITMASK;

        if (!_setOriginalAdressId) {
            _setOriginalAdressId = true;

            _originalAdressId = _adressId;
        }

        _adressId = adressId;
    }

    public long getOriginalAdressId() {
        return _originalAdressId;
    }

    @Override
    public long getContactId() {
        return _contactId;
    }

    @Override
    public void setContactId(long contactId) {
        _contactId = contactId;
    }

    @Override
    public long getSndContactId() {
        return _sndContactId;
    }

    @Override
    public void setSndContactId(long sndContactId) {
        _sndContactId = sndContactId;
    }

    @Override
    public boolean getContactAgency() {
        return _contactAgency;
    }

    @Override
    public boolean isContactAgency() {
        return _contactAgency;
    }

    @Override
    public void setContactAgency(boolean contactAgency) {
        _contactAgency = contactAgency;
    }

    @Override
    public long getOrgId() {
        return _orgId;
    }

    @Override
    public void setOrgId(long orgId) {
        _columnBitmask |= ORGID_COLUMN_BITMASK;

        if (!_setOriginalOrgId) {
            _setOriginalOrgId = true;

            _originalOrgId = _orgId;
        }

        _orgId = orgId;
    }

    public long getOriginalOrgId() {
        return _originalOrgId;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            AHOffer.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public AHOffer toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (AHOffer) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        AHOfferImpl ahOfferImpl = new AHOfferImpl();

        ahOfferImpl.setOfferId(getOfferId());
        ahOfferImpl.setTitle(getTitle());
        ahOfferImpl.setDescription(getDescription());
        ahOfferImpl.setWorkTime(getWorkTime());
        ahOfferImpl.setWorkType(getWorkType());
        ahOfferImpl.setType(getType());
        ahOfferImpl.setStatus(getStatus());
        ahOfferImpl.setSocialStatus(getSocialStatus());
        ahOfferImpl.setCreated(getCreated());
        ahOfferImpl.setUpdated(getUpdated());
        ahOfferImpl.setExpires(getExpires());
        ahOfferImpl.setPublish(getPublish());
        ahOfferImpl.setAdressId(getAdressId());
        ahOfferImpl.setContactId(getContactId());
        ahOfferImpl.setSndContactId(getSndContactId());
        ahOfferImpl.setContactAgency(getContactAgency());
        ahOfferImpl.setOrgId(getOrgId());

        ahOfferImpl.resetOriginalValues();

        return ahOfferImpl;
    }

    @Override
    public int compareTo(AHOffer ahOffer) {
        int value = 0;

        if (getUpdated() < ahOffer.getUpdated()) {
            value = -1;
        } else if (getUpdated() > ahOffer.getUpdated()) {
            value = 1;
        } else {
            value = 0;
        }

        value = value * -1;

        if (value != 0) {
            return value;
        }

        if (getStatus() < ahOffer.getStatus()) {
            value = -1;
        } else if (getStatus() > ahOffer.getStatus()) {
            value = 1;
        } else {
            value = 0;
        }

        value = value * -1;

        if (value != 0) {
            return value;
        }

        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof AHOffer)) {
            return false;
        }

        AHOffer ahOffer = (AHOffer) obj;

        long primaryKey = ahOffer.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        AHOfferModelImpl ahOfferModelImpl = this;

        ahOfferModelImpl._originalTitle = ahOfferModelImpl._title;

        ahOfferModelImpl._originalStatus = ahOfferModelImpl._status;

        ahOfferModelImpl._setOriginalStatus = false;

        ahOfferModelImpl._originalExpires = ahOfferModelImpl._expires;

        ahOfferModelImpl._setOriginalExpires = false;

        ahOfferModelImpl._originalPublish = ahOfferModelImpl._publish;

        ahOfferModelImpl._setOriginalPublish = false;

        ahOfferModelImpl._originalAdressId = ahOfferModelImpl._adressId;

        ahOfferModelImpl._setOriginalAdressId = false;

        ahOfferModelImpl._originalOrgId = ahOfferModelImpl._orgId;

        ahOfferModelImpl._setOriginalOrgId = false;

        ahOfferModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<AHOffer> toCacheModel() {
        AHOfferCacheModel ahOfferCacheModel = new AHOfferCacheModel();

        ahOfferCacheModel.offerId = getOfferId();

        ahOfferCacheModel.title = getTitle();

        String title = ahOfferCacheModel.title;

        if ((title != null) && (title.length() == 0)) {
            ahOfferCacheModel.title = null;
        }

        ahOfferCacheModel.description = getDescription();

        String description = ahOfferCacheModel.description;

        if ((description != null) && (description.length() == 0)) {
            ahOfferCacheModel.description = null;
        }

        ahOfferCacheModel.workTime = getWorkTime();

        String workTime = ahOfferCacheModel.workTime;

        if ((workTime != null) && (workTime.length() == 0)) {
            ahOfferCacheModel.workTime = null;
        }

        ahOfferCacheModel.workType = getWorkType();

        ahOfferCacheModel.type = getType();

        ahOfferCacheModel.status = getStatus();

        ahOfferCacheModel.socialStatus = getSocialStatus();

        ahOfferCacheModel.created = getCreated();

        ahOfferCacheModel.updated = getUpdated();

        ahOfferCacheModel.expires = getExpires();

        ahOfferCacheModel.publish = getPublish();

        ahOfferCacheModel.adressId = getAdressId();

        ahOfferCacheModel.contactId = getContactId();

        ahOfferCacheModel.sndContactId = getSndContactId();

        ahOfferCacheModel.contactAgency = getContactAgency();

        ahOfferCacheModel.orgId = getOrgId();

        return ahOfferCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(35);

        sb.append("{offerId=");
        sb.append(getOfferId());
        sb.append(", title=");
        sb.append(getTitle());
        sb.append(", description=");
        sb.append(getDescription());
        sb.append(", workTime=");
        sb.append(getWorkTime());
        sb.append(", workType=");
        sb.append(getWorkType());
        sb.append(", type=");
        sb.append(getType());
        sb.append(", status=");
        sb.append(getStatus());
        sb.append(", socialStatus=");
        sb.append(getSocialStatus());
        sb.append(", created=");
        sb.append(getCreated());
        sb.append(", updated=");
        sb.append(getUpdated());
        sb.append(", expires=");
        sb.append(getExpires());
        sb.append(", publish=");
        sb.append(getPublish());
        sb.append(", adressId=");
        sb.append(getAdressId());
        sb.append(", contactId=");
        sb.append(getContactId());
        sb.append(", sndContactId=");
        sb.append(getSndContactId());
        sb.append(", contactAgency=");
        sb.append(getContactAgency());
        sb.append(", orgId=");
        sb.append(getOrgId());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(55);

        sb.append("<model><model-name>");
        sb.append("de.fraunhofer.fokus.oefit.adhoc.model.AHOffer");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>offerId</column-name><column-value><![CDATA[");
        sb.append(getOfferId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>title</column-name><column-value><![CDATA[");
        sb.append(getTitle());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description</column-name><column-value><![CDATA[");
        sb.append(getDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>workTime</column-name><column-value><![CDATA[");
        sb.append(getWorkTime());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>workType</column-name><column-value><![CDATA[");
        sb.append(getWorkType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>type</column-name><column-value><![CDATA[");
        sb.append(getType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status</column-name><column-value><![CDATA[");
        sb.append(getStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>socialStatus</column-name><column-value><![CDATA[");
        sb.append(getSocialStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>created</column-name><column-value><![CDATA[");
        sb.append(getCreated());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>updated</column-name><column-value><![CDATA[");
        sb.append(getUpdated());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>expires</column-name><column-value><![CDATA[");
        sb.append(getExpires());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>publish</column-name><column-value><![CDATA[");
        sb.append(getPublish());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>adressId</column-name><column-value><![CDATA[");
        sb.append(getAdressId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>contactId</column-name><column-value><![CDATA[");
        sb.append(getContactId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sndContactId</column-name><column-value><![CDATA[");
        sb.append(getSndContactId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>contactAgency</column-name><column-value><![CDATA[");
        sb.append(getContactAgency());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>orgId</column-name><column-value><![CDATA[");
        sb.append(getOrgId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
