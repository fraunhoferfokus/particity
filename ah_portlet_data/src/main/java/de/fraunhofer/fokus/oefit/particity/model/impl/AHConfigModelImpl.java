package de.fraunhofer.fokus.oefit.particity.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import de.fraunhofer.fokus.oefit.particity.model.AHConfig;
import de.fraunhofer.fokus.oefit.particity.model.AHConfigModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AHConfig service. Represents a row in the &quot;AHCFG&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.fraunhofer.fokus.oefit.particity.model.AHConfigModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AHConfigImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AHConfigImpl
 * @see de.fraunhofer.fokus.oefit.particity.model.AHConfig
 * @see de.fraunhofer.fokus.oefit.particity.model.AHConfigModel
 * @generated
 */
public class AHConfigModelImpl extends BaseModelImpl<AHConfig>
    implements AHConfigModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a a h config model instance should use the {@link de.fraunhofer.fokus.oefit.particity.model.AHConfig} interface instead.
     */
    public static final String TABLE_NAME = "AHCFG";
    public static final Object[][] TABLE_COLUMNS = {
            { "name", Types.VARCHAR },
            { "value", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table AHCFG (name VARCHAR(75) not null primary key,value STRING null)";
    public static final String TABLE_SQL_DROP = "drop table AHCFG";
    public static final String ORDER_BY_JPQL = " ORDER BY ahConfig.name ASC";
    public static final String ORDER_BY_SQL = " ORDER BY AHCFG.name ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.de.fraunhofer.fokus.oefit.particity.model.AHConfig"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.de.fraunhofer.fokus.oefit.particity.model.AHConfig"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.de.fraunhofer.fokus.oefit.particity.model.AHConfig"));
    private static ClassLoader _classLoader = AHConfig.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            AHConfig.class
        };
    private String _name;
    private String _value;
    private AHConfig _escapedModel;

    public AHConfigModelImpl() {
    }

    @Override
    public String getPrimaryKey() {
        return _name;
    }

    @Override
    public void setPrimaryKey(String primaryKey) {
        setName(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _name;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((String) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return AHConfig.class;
    }

    @Override
    public String getModelClassName() {
        return AHConfig.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("name", getName());
        attributes.put("value", getValue());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        String value = (String) attributes.get("value");

        if (value != null) {
            setValue(value);
        }
    }

    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _name = name;
    }

    @Override
    public String getValue() {
        if (_value == null) {
            return StringPool.BLANK;
        } else {
            return _value;
        }
    }

    @Override
    public void setValue(String value) {
        _value = value;
    }

    @Override
    public AHConfig toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (AHConfig) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        AHConfigImpl ahConfigImpl = new AHConfigImpl();

        ahConfigImpl.setName(getName());
        ahConfigImpl.setValue(getValue());

        ahConfigImpl.resetOriginalValues();

        return ahConfigImpl;
    }

    @Override
    public int compareTo(AHConfig ahConfig) {
        String primaryKey = ahConfig.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof AHConfig)) {
            return false;
        }

        AHConfig ahConfig = (AHConfig) obj;

        String primaryKey = ahConfig.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<AHConfig> toCacheModel() {
        AHConfigCacheModel ahConfigCacheModel = new AHConfigCacheModel();

        ahConfigCacheModel.name = getName();

        String name = ahConfigCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            ahConfigCacheModel.name = null;
        }

        ahConfigCacheModel.value = getValue();

        String value = ahConfigCacheModel.value;

        if ((value != null) && (value.length() == 0)) {
            ahConfigCacheModel.value = null;
        }

        return ahConfigCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{name=");
        sb.append(getName());
        sb.append(", value=");
        sb.append(getValue());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("de.fraunhofer.fokus.oefit.particity.model.AHConfig");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>value</column-name><column-value><![CDATA[");
        sb.append(getValue());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
