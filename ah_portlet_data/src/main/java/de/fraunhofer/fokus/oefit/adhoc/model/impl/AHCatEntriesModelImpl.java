/*
 * Copyright (c) 2015, Fraunhofer FOKUS
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 * 
 * * Neither the name of particity nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * 
 * 
 * @author sma
 */
package de.fraunhofer.fokus.oefit.adhoc.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntries;
import de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntriesModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AHCatEntries service. Represents a row in the &quot;AHCITEM&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntriesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AHCatEntriesImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AHCatEntriesImpl
 * @see de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntries
 * @see de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntriesModel
 * @generated
 */
public class AHCatEntriesModelImpl extends BaseModelImpl<AHCatEntries>
    implements AHCatEntriesModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a a h cat entries model instance should use the {@link de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntries} interface instead.
     */
    public static final String TABLE_NAME = "AHCITEM";
    public static final Object[][] TABLE_COLUMNS = {
            { "itemId", Types.BIGINT },
            { "catId", Types.BIGINT },
            { "name", Types.VARCHAR },
            { "descr", Types.VARCHAR },
            { "parentId", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table AHCITEM (itemId LONG not null primary key,catId LONG,name VARCHAR(80) null,descr STRING null,parentId LONG)";
    public static final String TABLE_SQL_DROP = "drop table AHCITEM";
    public static final String ORDER_BY_JPQL = " ORDER BY ahCatEntries.itemId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY AHCITEM.itemId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntries"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntries"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntries"),
            true);
    public static long CATID_COLUMN_BITMASK = 1L;
    public static long ITEMID_COLUMN_BITMASK = 2L;
    public static long PARENTID_COLUMN_BITMASK = 4L;
    public static final String MAPPING_TABLE_ADHOC_SUB_CITM_NAME = "ADHOC_sub_citm";
    public static final Object[][] MAPPING_TABLE_ADHOC_SUB_CITM_COLUMNS = {
            { "itemId", Types.BIGINT },
            { "subId", Types.BIGINT }
        };
    public static final String MAPPING_TABLE_ADHOC_SUB_CITM_SQL_CREATE = "create table ADHOC_sub_citm (itemId LONG not null,subId LONG not null,primary key (itemId, subId))";
    public static final boolean FINDER_CACHE_ENABLED_ADHOC_SUB_CITM = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.ADHOC_sub_citm"), true);
    public static final String MAPPING_TABLE_ADHOC_OFFER_CITM_NAME = "ADHOC_offer_citm";
    public static final Object[][] MAPPING_TABLE_ADHOC_OFFER_CITM_COLUMNS = {
            { "itemId", Types.BIGINT },
            { "offerId", Types.BIGINT }
        };
    public static final String MAPPING_TABLE_ADHOC_OFFER_CITM_SQL_CREATE = "create table ADHOC_offer_citm (itemId LONG not null,offerId LONG not null,primary key (itemId, offerId))";
    public static final boolean FINDER_CACHE_ENABLED_ADHOC_OFFER_CITM = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.ADHOC_offer_citm"), true);
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntries"));
    private static ClassLoader _classLoader = AHCatEntries.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            AHCatEntries.class
        };
    private long _itemId;
    private long _originalItemId;
    private boolean _setOriginalItemId;
    private long _catId;
    private long _originalCatId;
    private boolean _setOriginalCatId;
    private String _name;
    private String _descr;
    private long _parentId;
    private long _originalParentId;
    private boolean _setOriginalParentId;
    private long _columnBitmask;
    private AHCatEntries _escapedModel;

    public AHCatEntriesModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _itemId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setItemId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _itemId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return AHCatEntries.class;
    }

    @Override
    public String getModelClassName() {
        return AHCatEntries.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("itemId", getItemId());
        attributes.put("catId", getCatId());
        attributes.put("name", getName());
        attributes.put("descr", getDescr());
        attributes.put("parentId", getParentId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long itemId = (Long) attributes.get("itemId");

        if (itemId != null) {
            setItemId(itemId);
        }

        Long catId = (Long) attributes.get("catId");

        if (catId != null) {
            setCatId(catId);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        String descr = (String) attributes.get("descr");

        if (descr != null) {
            setDescr(descr);
        }

        Long parentId = (Long) attributes.get("parentId");

        if (parentId != null) {
            setParentId(parentId);
        }
    }

    @Override
    public long getItemId() {
        return _itemId;
    }

    @Override
    public void setItemId(long itemId) {
        _columnBitmask |= ITEMID_COLUMN_BITMASK;

        if (!_setOriginalItemId) {
            _setOriginalItemId = true;

            _originalItemId = _itemId;
        }

        _itemId = itemId;
    }

    public long getOriginalItemId() {
        return _originalItemId;
    }

    @Override
    public long getCatId() {
        return _catId;
    }

    @Override
    public void setCatId(long catId) {
        _columnBitmask |= CATID_COLUMN_BITMASK;

        if (!_setOriginalCatId) {
            _setOriginalCatId = true;

            _originalCatId = _catId;
        }

        _catId = catId;
    }

    public long getOriginalCatId() {
        return _originalCatId;
    }

    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _name = name;
    }

    @Override
    public String getDescr() {
        if (_descr == null) {
            return StringPool.BLANK;
        } else {
            return _descr;
        }
    }

    @Override
    public void setDescr(String descr) {
        _descr = descr;
    }

    @Override
    public long getParentId() {
        return _parentId;
    }

    @Override
    public void setParentId(long parentId) {
        _columnBitmask |= PARENTID_COLUMN_BITMASK;

        if (!_setOriginalParentId) {
            _setOriginalParentId = true;

            _originalParentId = _parentId;
        }

        _parentId = parentId;
    }

    public long getOriginalParentId() {
        return _originalParentId;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            AHCatEntries.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public AHCatEntries toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (AHCatEntries) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        AHCatEntriesImpl ahCatEntriesImpl = new AHCatEntriesImpl();

        ahCatEntriesImpl.setItemId(getItemId());
        ahCatEntriesImpl.setCatId(getCatId());
        ahCatEntriesImpl.setName(getName());
        ahCatEntriesImpl.setDescr(getDescr());
        ahCatEntriesImpl.setParentId(getParentId());

        ahCatEntriesImpl.resetOriginalValues();

        return ahCatEntriesImpl;
    }

    @Override
    public int compareTo(AHCatEntries ahCatEntries) {
        long primaryKey = ahCatEntries.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof AHCatEntries)) {
            return false;
        }

        AHCatEntries ahCatEntries = (AHCatEntries) obj;

        long primaryKey = ahCatEntries.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        AHCatEntriesModelImpl ahCatEntriesModelImpl = this;

        ahCatEntriesModelImpl._originalItemId = ahCatEntriesModelImpl._itemId;

        ahCatEntriesModelImpl._setOriginalItemId = false;

        ahCatEntriesModelImpl._originalCatId = ahCatEntriesModelImpl._catId;

        ahCatEntriesModelImpl._setOriginalCatId = false;

        ahCatEntriesModelImpl._originalParentId = ahCatEntriesModelImpl._parentId;

        ahCatEntriesModelImpl._setOriginalParentId = false;

        ahCatEntriesModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<AHCatEntries> toCacheModel() {
        AHCatEntriesCacheModel ahCatEntriesCacheModel = new AHCatEntriesCacheModel();

        ahCatEntriesCacheModel.itemId = getItemId();

        ahCatEntriesCacheModel.catId = getCatId();

        ahCatEntriesCacheModel.name = getName();

        String name = ahCatEntriesCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            ahCatEntriesCacheModel.name = null;
        }

        ahCatEntriesCacheModel.descr = getDescr();

        String descr = ahCatEntriesCacheModel.descr;

        if ((descr != null) && (descr.length() == 0)) {
            ahCatEntriesCacheModel.descr = null;
        }

        ahCatEntriesCacheModel.parentId = getParentId();

        return ahCatEntriesCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(11);

        sb.append("{itemId=");
        sb.append(getItemId());
        sb.append(", catId=");
        sb.append(getCatId());
        sb.append(", name=");
        sb.append(getName());
        sb.append(", descr=");
        sb.append(getDescr());
        sb.append(", parentId=");
        sb.append(getParentId());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(19);

        sb.append("<model><model-name>");
        sb.append("de.fraunhofer.fokus.oefit.adhoc.model.AHCatEntries");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>itemId</column-name><column-value><![CDATA[");
        sb.append(getItemId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>catId</column-name><column-value><![CDATA[");
        sb.append(getCatId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>descr</column-name><column-value><![CDATA[");
        sb.append(getDescr());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>parentId</column-name><column-value><![CDATA[");
        sb.append(getParentId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
