<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
SearchContainer mainSearchSearchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, null, null);

SearchContext searchContext = SearchContextFactory.getInstance(request);

mainSearchSearchContainer.setEmptyResultsMessage(LanguageUtil.format(pageContext, "no-results-were-found-that-matched-the-keywords-x", "<strong>" + HtmlUtil.escape(searchContext.getKeywords()) + "</strong>"));

searchContext.setAttribute("paginationType", "more");
searchContext.setEnd(mainSearchSearchContainer.getEnd());

QueryConfig queryConfig = new QueryConfig();

queryConfig.setCollatedSpellCheckResultEnabled(collatedSpellCheckResultEnabled);
queryConfig.setCollatedSpellCheckResultScoresThreshold(collatedSpellCheckResultDisplayThreshold);
queryConfig.setHighlightEnabled(true);
queryConfig.setQueryIndexingEnabled(queryIndexingEnabled);
queryConfig.setQueryIndexingThreshold(queryIndexingThreshold);
queryConfig.setQuerySuggestionEnabled(querySuggestionsEnabled);
queryConfig.setQuerySuggestionScoresThreshold(querySuggestionsDisplayThreshold);
queryConfig.setQuerySuggestionsMax(querySuggestionsMax);

searchContext.setQueryConfig(queryConfig);

searchContext.setStart(mainSearchSearchContainer.getStart());

Facet assetEntriesFacet = new AssetEntriesFacet(searchContext);

assetEntriesFacet.setStatic(true);

searchContext.addFacet(assetEntriesFacet);

Facet scopeFacet = new ScopeFacet(searchContext);

scopeFacet.setStatic(true);

searchContext.addFacet(scopeFacet);

List<FacetConfiguration> facetConfigurations = FacetConfigurationUtil.load(searchConfiguration);

for (FacetConfiguration facetConfiguration : facetConfigurations) {
	Facet facet = FacetFactoryUtil.create(searchContext, facetConfiguration);

	searchContext.addFacet(facet);
}

Indexer indexer = FacetedSearcher.getInstance();

Hits hits = indexer.search(searchContext);

String[] queryTerms = hits.getQueryTerms();

request.setAttribute("search.jsp-queryTerms", queryTerms);

boolean showMenu = advancedConfiguration || displayScopeFacet || displayAssetTypeFacet || displayAssetTagsFacet || displayAssetCategoriesFacet || displayFolderFacet || displayUserFacet || displayModifiedRangeFacet;
%>

<aui:row cssClass='<%= "search-layout" + (showMenu ? " menu-column" : StringPool.BLANK) %>'>
	<c:if test="<%= showMenu %>">
		<aui:col id="facetNavigation" span="2">

			<%
			Map<String, Facet> facets = searchContext.getFacets();

			List<Facet> facetsList = ListUtil.fromCollection(facets.values());

			facetsList = ListUtil.sort(facetsList, new PropertyComparator("facetConfiguration.weight", false, false));

			for (Facet facet : facetsList) {
				if (facet.isStatic()) {
					continue;
				}

				FacetConfiguration facetConfiguration = facet.getFacetConfiguration();

				request.setAttribute("search.jsp-facet", facet);
			%>

				<liferay-util:include page='<%= "/html/portlet/search/facets/" + facetConfiguration.getDisplayStyle() + ".jsp" %>' />

			<%
			}
			%>

			<aui:script use="aui-base">
				var container = A.one('#<portlet:namespace />facetNavigation');

				if (container) {
					container.delegate(
						'click',
						function(event) {
							var term = event.currentTarget;

							var facetValue = term.ancestor('.facet-value');

							if (facetValue) {
								var currentTerm = facetValue.hasClass('active');

								facetValue.radioClass('active');

								if (!currentTerm) {
									facetValue.radioClass('active');

									var searchFacet = facetValue.ancestor('.search-facet');

									if (searchFacet) {
										var field = document.<portlet:namespace />fm['<portlet:namespace />' + searchFacet.attr('data-facetFieldName')];

										if (field) {
											field.value = term.attr('data-value');

											document.<portlet:namespace />fm.<portlet:namespace /><%= SearchContainer.DEFAULT_CUR_PARAM %>.value = 1;

											submitForm(document.<portlet:namespace />fm);
										}
									}
								}

								event.preventDefault();
							}
						},
						'.facet-value a'
					);
				}
			</aui:script>
		</aui:col>
	</c:if>

	<aui:col cssClass="result" first="<%= !showMenu %>" span="10">
		<%@ include file="/html/portlet/search/main_search_suggest.jspf" %>

		<liferay-ui:search-container
			searchContainer="<%= mainSearchSearchContainer %>"
			total="<%= hits.getLength() %>"
		>
			<liferay-ui:search-container-results
				results="<%= hits.toList() %>"
			/>

			<liferay-ui:search-container-row
				className="com.liferay.portal.kernel.search.Document"
				escapedModel="<%= false %>"
				keyProperty="UID"
				modelVar="document"
				stringKey="<%= true %>"
			>
				<liferay-ui:search-container-column-jsp path='<%= displayResultsInDocumentForm ? "/html/portlet/search/main_search_document_form.jsp" : "/html/portlet/search/main_search_result_form.jsp" %>' />
			</liferay-ui:search-container-row>

			<liferay-ui:search-iterator type="more" />

			<c:if test="<%= displayMainQuery && (hits.getQuery() != null) %>">
				<table class="full-query">
					<tr>
						<td valign="top">
							<div class="container">
								<code>
									<%= HtmlUtil.escape(hits.getQuery().toString()) %>
								</code>
							</div>
						</td>
					</tr>
				</table>
			</c:if>
		</liferay-ui:search-container>
	</aui:col>
</aui:row>