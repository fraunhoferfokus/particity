<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
int curFoldersCount = 0;
int curFileEntriesCount = 0;

boolean repositoryAccess = true;

try {
	curFoldersCount = DLAppServiceUtil.getFoldersCount(curFolder.getRepositoryId(), curFolder.getFolderId());
	curFileEntriesCount = DLAppServiceUtil.getFileEntriesAndFileShortcutsCount(curFolder.getRepositoryId(), curFolder.getFolderId(), status);
}
catch (RepositoryException re) {
	_log.error(re.getMessage());
}
catch (Exception e) {
	repositoryAccess = false;

	row.setClassName("repository-error");
}

for (int j = 0; j < folderColumns.length; j++) {
	String folderColumn = folderColumns[j];
%>

	<c:choose>
		<c:when test='<%= folderColumn.equals("action") && showActions %>'>

			<%
			String align = SearchEntry.DEFAULT_ALIGN;

			if ((j + 1) == folderColumns.length) {
				align = "right";
			}
			%>

			<liferay-ui:search-container-column-jsp
				align="<%= align %>"
				path="/html/portlet/document_library/folder_action.jsp"
			/>
		</c:when>
		<c:when test='<%= folderColumn.equals("downloads") %>'>
			<liferay-ui:search-container-column-text
				name="<%= folderColumn %>"
				value="--"
			/>
		</c:when>
		<c:when test='<%= folderColumn.equals("folder") || folderColumn.equals("name") %>'>
			<liferay-ui:search-container-column-text
				buffer="buffer"
				href="<%= repositoryAccess ? rowURL : null %>"
				name="<%= folderColumn %>"
			>

				<%
				if (repositoryAccess) {
					buffer.append("<a href=\"");
					buffer.append(rowURL);
					buffer.append("\">");
				}

				buffer.append("<img align=\"left\" border=\"0\" src=\"");
				buffer.append(HtmlUtil.escapeHREF(themeDisplay.getPathThemeImages()));

				if (curFolder.isMountPoint()) {
					buffer.append(repositoryAccess ? "/common/drive.png\">" : "/common/drive_error.png\">");
				}
				else {
					if ((curFoldersCount + curFileEntriesCount) > 0) {
						buffer.append("/common/folder_full_document.png\">");
					}
					else {
						buffer.append("/common/folder_empty.png\">");
					}
				}

				if (!repositoryAccess) {
					buffer.append("<span title=\"");
					buffer.append(LanguageUtil.get(pageContext, "an-unexpected-error-occurred-while-connecting-to-the-repository"));
					buffer.append("\">");
				}

				buffer.append("<strong>");
				buffer.append(HtmlUtil.escape(curFolder.getName()));
				buffer.append("</strong>");

				if (!repositoryAccess) {
					buffer.append("</span>");
				}

				if (Validator.isNotNull(curFolder.getDescription())) {
					buffer.append("<br />");
					buffer.append(HtmlUtil.escape(curFolder.getDescription()));
				}

				if (repositoryAccess) {
					buffer.append("</a>");
				}

				if (showSubfolders) {
					List subfolders = new ArrayList();

					try {
						subfolders = DLAppServiceUtil.getFolders(curFolder.getRepositoryId(), curFolder.getFolderId(), 0, 5);
					}
					catch (Exception e) {
					}

					if (!subfolders.isEmpty()) {
						buffer.append("<br /><u>");
						buffer.append(LanguageUtil.get(pageContext, "subfolders"));
						buffer.append("</u>: ");

						for (int k = 0; k < subfolders.size(); k++) {
							Folder subfolder = (Folder)subfolders.get(k);

							rowURL.setParameter("folderId", String.valueOf(subfolder.getFolderId()));

							buffer.append("<a href=\"");
							buffer.append(rowURL);
							buffer.append("\">");
							buffer.append(HtmlUtil.escape(subfolder.getName()));
							buffer.append("</a>");

							if ((k + 1) < subfolders.size()) {
								buffer.append(", ");
							}
						}

						if (curFoldersCount > subfolders.size()) {
							rowURL.setParameter("folderId", String.valueOf(curFolder.getFolderId()));

							buffer.append(", <a href=\"");
							buffer.append(rowURL);
							buffer.append("\">");
							buffer.append(LanguageUtil.get(pageContext, "more"));
							buffer.append(" &raquo;");
							buffer.append("</a>");
						}

						rowURL.setParameter("folderId", String.valueOf(curFolder.getFolderId()));
					}
				}
				%>

			</liferay-ui:search-container-column-text>
		</c:when>
		<c:when test='<%= folderColumn.equals("locked") %>'>

			<%
			boolean isLocked = curFolder.isLocked();
			%>

			<liferay-ui:search-container-column-text
				href="<%= repositoryAccess ? rowURL : null %>"
				name="<%= folderColumn %>"
				value='<%= LanguageUtil.get(pageContext, isLocked ? "yes" : "no") %>'
			/>
		</c:when>
		<c:when test='<%= folderColumn.equals("num-of-documents") %>'>
			<liferay-ui:search-container-column-text
				href="<%= repositoryAccess ? rowURL : null %>"
				name="<%= folderColumn %>"
				value="<%= String.valueOf(curFileEntriesCount) %>"
			/>
		</c:when>
		<c:when test='<%= folderColumn.equals("num-of-folders") %>'>
			<liferay-ui:search-container-column-text
				href="<%= repositoryAccess ? rowURL : null %>"
				name="<%= folderColumn %>"
				value="<%= String.valueOf(curFoldersCount) %>"
			/>
		</c:when>
		<c:when test='<%= folderColumn.equals("size") %>'>
			<liferay-ui:search-container-column-text
				name="<%= folderColumn %>"
				value="--"
			/>
		</c:when>
		<c:when test='<%= folderColumn.equals("tags") %>'>
			<liferay-ui:search-container-column-text
				name="<%= folderColumn %>"
				value="--"
			/>
		</c:when>
	</c:choose>

<%
}
%>