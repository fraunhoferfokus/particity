<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
int[] categories = new int[activityCounters.size()];
int[] values = new int[activityCounters.size()];

int totalValue = 0;

for (int i = 0; i < activityCounters.size(); i++) {
	SocialActivityCounter activityCounter = activityCounters.get(i);

	categories[i] = i + 1;
	values[i] = activityCounter.getCurrentValue();

	totalValue = totalValue + activityCounter.getCurrentValue();
}

DecimalFormat decimalFormat = new DecimalFormat("##.00%");
%>

<aui:row>
	<aui:col cssClass="chart-column" width="<%= chartWidth %>">
		<div class="group-statistics-chart">
			<div id="groupStatisticsChart<%= displayActivityCounterNameIndex %>"></div>
		</div>
	</aui:col>

	<aui:col cssClass="info-column" width="<%= 100 - chartWidth %>">
		<div class="group-statistics-info">
			<strong><liferay-ui:message key="activities-by-area" />:</strong>

			<table>

			<%
			for (int i = 0; i < activityCounters.size(); i++) {
				SocialActivityCounter activityCounter = activityCounters.get(i);
			%>

				<tr>
					<td>
						<div class="group-statistics-color-marker" style="background-color: <%= _BACKGROUND_COLORS[i % _BACKGROUND_COLORS.length] %>"></div>
					</td>
					<td>
						<%= ResourceActionsUtil.getModelResource(locale, activityCounter.getClassName()) %>
					</td>
					<td>
						:
					</td>
					<td align="right">

						<%
						double percentage = 0;

						if (totalValue > 0) {
							percentage = (double)activityCounter.getCurrentValue() / (double)totalValue;
						}
						%>

						<%= decimalFormat.format(percentage) %>
					</td>
				</tr>

			<%
			}
			%>

			</table>
		</div>
	</aui:col>
</aui:row>

<aui:script use="charts">
	var categories = [<%= StringUtil.merge(categories) %>];
	var values = [<%= StringUtil.merge(values) %>];

	var data = [];

	for (var i = 0; i < categories.length; i++) {
		data.push(
			{
				category: categories[i],
				values: values[i]
			}
		);
	}

	var tooltip = {
		markerLabelFunction: function(categoryItem, valueItem, itemIndex, series, seriesIndex) {
			return valueItem.value;
		},

		styles: {
			backgroundColor: '#FFF',
			borderColor: '#4572A7',
			borderWidth: 1,
			color: '#000',
			textAlign: 'center',
			width: 30
		}
	};

	var chartContainer = A.one('#groupStatisticsChart<%= displayActivityCounterNameIndex %>');

	var getContainerWidth = function(container) {
		return container.width() * 0.7;
	};

	var containerWidth = getContainerWidth(chartContainer);

	chartContainer.setStyle('height', containerWidth);

	var chart = new A.Chart(
		{
			dataProvider: data,
			seriesCollection: [
				{
					categoryKey: 'category',
					styles: {
						fill: {
							colors: ['<%= StringUtil.merge(_BACKGROUND_COLORS, "', '") %>']
						},
						border: {
							alpha: 0.8,
							colors: new Array(9).join('#333,').split(','),
							weight: 1
						}
					},
					valueKey: 'values'
				}
			],
			height: containerWidth,
			tooltip: tooltip,
			type: 'pie',
			width: containerWidth
		}
	).render(chartContainer);

	Liferay.after(
		['portletMoved', 'liferaypanel:collapse'],
		function(event) {
			var width = getContainerWidth(chartContainer);

			if (width && (event.type == 'portletMoved' && event.portletId == '<%= portletDisplay.getId() %>') ||
				(event.type == 'liferaypanel:collapse' && event.panelId == 'groupStatisticsPanel<%= displayActivityCounterNameIndex %>')) {

				chart.set('width', width);

				chartContainer.setStyle('height', width);
			}
		}
	);
</aui:script>

<%!
private static final String[] _BACKGROUND_COLORS = new String[] {"#4572A7", "#AA4643", "#89A54E", "#80699B", "#3D96AE", "#DB843D", "#92A8CD", "#A47D7C", "#B5CA92"};
%>